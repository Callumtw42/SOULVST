processor Detuner
{
    input event float detuneIn, voiceCountIn;

    output stream float 
    logOut,

    activeOut1, activeOut2, activeOut3, activeOut4,
    activeOut5, activeOut6, activeOut7, activeOut8,
    activeOut9, activeOut10, activeOut11, activeOut12,
    activeOut13, activeOut14, activeOut15, activeOut16,

    detuneOut1, detuneOut2, detuneOut3, detuneOut4,
    detuneOut5, detuneOut6, detuneOut7, detuneOut8,
    detuneOut9, detuneOut10, detuneOut11, detuneOut12,
    detuneOut13, detuneOut14, detuneOut15, detuneOut16;

    const int maxVoices = 16;

    float<maxVoices> detuneVals; 
    float <maxVoices> active;
    float voiceCount = 16;
    float detune;

    event voiceCountIn(float count)
    {
        voiceCount = count;
    }

    event detuneIn (float f)
    {
        detune = f;
    }

    void setDetuneVals()
    {
        float amt = -1.0f;
        if(voiceCount % 2 != 0)
        {
            float increment = 2.0f / ((voiceCount-1));
            for (int i = 0; i < maxVoices; i++)
                setDetuneVal(i, detune, amt, increment);
        }
        else
        { 
            float increment = 2.0f / voiceCount;
            for (int i = 0; i < maxVoices; i++)
            {
                if(amt == 0) 
                    amt += increment;
                setDetuneVal(i, detune, amt, increment);
            }
        }
    }

    void setDetuneVal(int i, float detune, float& amt, float increment)
    {
        if(i < voiceCount)
        {
            detuneVals.at(i) = amt * detune;
            amt += increment;
        }
        else
            detuneVals.at(i) = 0;
    }


    void run()
    {
        loop
        { 
            for (int i = 0; i < voiceCount; i++)
                active.at(i) = 1;

            for (int j = voiceCount; j < maxVoices; j++)
                active.at(j) = 0;

            setDetuneVals();

            detuneOut1 << detuneVals.at(0);
            detuneOut2 << detuneVals.at(1);
            detuneOut3 << detuneVals.at(2);
            detuneOut4 << detuneVals.at(3);
            detuneOut5 << detuneVals.at(4);
            detuneOut6 << detuneVals.at(5);
            detuneOut7 << detuneVals.at(6);
            detuneOut8 << detuneVals.at(7);
            detuneOut9 << detuneVals.at(8);
            detuneOut10 << detuneVals.at(9);
            detuneOut11 << detuneVals.at(10);
            detuneOut12 << detuneVals.at(11);
            detuneOut13 << detuneVals.at(12);
            detuneOut14 << detuneVals.at(13);
            detuneOut15 << detuneVals.at(14);
            detuneOut16 << detuneVals.at(15);

            activeOut1 << active.at(0);
            activeOut2 << active.at(1);
            activeOut3 << active.at(2);
            activeOut4 << active.at(3);
            activeOut5 << active.at(4);
            activeOut6 << active.at(5);
            activeOut7 << active.at(6);
            activeOut8 << active.at(7);
            activeOut9 << active.at(8);
            activeOut10 << active.at(9);
            activeOut11 << active.at(10);
            activeOut12 << active.at(11);
            activeOut13 << active.at(12);
            activeOut14 << active.at(13);
            activeOut15 << active.at(14);
            activeOut16 << active.at(15);

            advance();
        }
    }
}