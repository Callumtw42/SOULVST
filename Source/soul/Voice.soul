graph Voice
{
    input event (soul::note_events::NoteOn,
                 soul::note_events::NoteOff,
                 soul::note_events::PitchBend,
                 soul::note_events::Pressure,
                 soul::note_events::Slide) eventIn;

    input event float cutoffParam, resonanceParam,
                      ampAttack, ampDecay, ampSustain, ampRelease, ampSensitivity, oscGain,
                      osc1waveshape, osc1detuneSemitones, detune,
                      osc2waveshape, osc2detuneSemitones,
                      filterAttack, filterDecay, filterSustain, filterRelease, filterSensitivity,
                      oscillatorMix,
                      filterEnvMod, filterCutoffTrack,
                      log, voiceCountIn, 
                      cutoffIn, cutoffModAmt, cutoffRelease, cutoffSustain, cutoffDecay,  cutoffAttack, cutoffSensitivity  
                      ;
    
    output stream float<2> audioOut;

    let
    {
        osc1                = PolyBlep;
        osc2                = PolyBlep;
        osc3                = PolyBlep;
        osc4                = PolyBlep;
        osc5                = PolyBlep;
        osc6                = PolyBlep;
        osc7                = PolyBlep;
        osc8                = PolyBlep;
        osc9                = PolyBlep;
        osc10                = PolyBlep;
        osc11                = PolyBlep;
        osc12                = PolyBlep;
        osc13                = PolyBlep;
        osc14                = PolyBlep;
        osc15                = PolyBlep;
        osc16                = PolyBlep;

        filter = Filter;
        filterEnv = Envelope;
        
        detuner             = Detuner;
        amplitudeEnvelope   = ADSREnvelope;
        voiceController     = Controller;
    }

    connection
    {
        voiceController.note1_active -> amplitudeEnvelope.triggerLevel;
        eventIn -> voiceController.eventIn;

        filter.audioOut -> audioOut;

        ampAttack               -> amplitudeEnvelope.attack;
        ampDecay                -> amplitudeEnvelope.decay;
        ampSustain              -> amplitudeEnvelope.sustain;
        ampRelease              -> amplitudeEnvelope.release;
        ampSensitivity          -> amplitudeEnvelope.sensitivity;

        cutoffAttack            -> filterEnv.attack;
        cutoffDecay             -> filterEnv.decay;
        cutoffSustain           -> filterEnv.sustain;
        cutoffRelease           -> filterEnv.release;
        cutoffSensitivity       -> filterEnv.sensitivity;
        cutoffModAmt            -> filterEnv.modAmtIn;
        cutoffIn                -> filterEnv.paramValIn;
        voiceController.note1_active -> filterEnv.triggerLevel;
        filterEnv.envelopeLevel -> filter.cutoffIn;

        voiceCountIn -> detuner.voiceCountIn;
        detune -> detuner.detuneIn; 

        detuner.detuneOut1->osc1.detuneIn; 
        detuner.detuneOut2->osc2.detuneIn;
        detuner.detuneOut3->osc3.detuneIn;
        detuner.detuneOut4->osc4.detuneIn;
        detuner.detuneOut5->osc5.detuneIn;
        detuner.detuneOut6->osc6.detuneIn;
        detuner.detuneOut7->osc7.detuneIn;
        detuner.detuneOut8->osc8.detuneIn;
        detuner.detuneOut9->osc9.detuneIn;
        detuner.detuneOut10->osc10.detuneIn;
        detuner.detuneOut11->osc11.detuneIn;
        detuner.detuneOut12->osc12.detuneIn;
        detuner.detuneOut13->osc13.detuneIn;
        detuner.detuneOut14->osc14.detuneIn;
        detuner.detuneOut15->osc15.detuneIn;
        detuner.detuneOut16->osc16.detuneIn;

        detuner.activeOut1->osc1.activeIn;
        detuner.activeOut2->osc2.activeIn;
        detuner.activeOut3->osc3.activeIn;
        detuner.activeOut4->osc4.activeIn;
        detuner.activeOut5->osc5.activeIn;
        detuner.activeOut6->osc6.activeIn;
        detuner.activeOut7->osc7.activeIn;
        detuner.activeOut8->osc8.activeIn;
        detuner.activeOut9->osc9.activeIn;
        detuner.activeOut10->osc10.activeIn;
        detuner.activeOut11->osc11.activeIn;
        detuner.activeOut12->osc12.activeIn;
        detuner.activeOut13->osc13.activeIn;
        detuner.activeOut14->osc14.activeIn;
        detuner.activeOut15->osc15.activeIn;
        detuner.activeOut16->osc16.activeIn;

        voiceController.note1_frequencyOut -> osc1.frequencyIn;
        voiceController.note1_frequencyOut -> osc2.frequencyIn;
        voiceController.note1_frequencyOut -> osc3.frequencyIn;
        voiceController.note1_frequencyOut -> osc4.frequencyIn;
        voiceController.note1_frequencyOut -> osc5.frequencyIn;
        voiceController.note1_frequencyOut -> osc6.frequencyIn;
        voiceController.note1_frequencyOut -> osc7.frequencyIn;
        voiceController.note1_frequencyOut -> osc8.frequencyIn;
        voiceController.note1_frequencyOut -> osc9.frequencyIn;
        voiceController.note1_frequencyOut -> osc10.frequencyIn;
        voiceController.note1_frequencyOut -> osc11.frequencyIn;
        voiceController.note1_frequencyOut -> osc12.frequencyIn;
        voiceController.note1_frequencyOut -> osc13.frequencyIn;
        voiceController.note1_frequencyOut -> osc14.frequencyIn;
        voiceController.note1_frequencyOut -> osc15.frequencyIn;
        voiceController.note1_frequencyOut -> osc16.frequencyIn;
        
        amplitudeEnvelope.envelopeLevel -> osc1.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc2.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc3.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc4.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc5.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc6.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc7.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc8.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc9.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc10.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc11.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc12.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc13.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc14.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc15.gainIn;
        amplitudeEnvelope.envelopeLevel -> osc16.gainIn;

        osc1.audioOut -> filter.audioIn;
        osc2.audioOut -> filter.audioIn;
        osc3.audioOut -> filter.audioIn;
        osc4.audioOut -> filter.audioIn;
        osc5.audioOut -> filter.audioIn;
        osc6.audioOut -> filter.audioIn;
        osc7.audioOut -> filter.audioIn;
        osc8.audioOut -> filter.audioIn;
        osc9.audioOut -> filter.audioIn;
        osc10.audioOut -> filter.audioIn;
        osc11.audioOut -> filter.audioIn;
        osc12.audioOut -> filter.audioIn;
        osc13.audioOut -> filter.audioIn;
        osc14.audioOut -> filter.audioIn;
        osc15.audioOut -> filter.audioIn;
        osc16.audioOut -> filter.audioIn;
    }
}